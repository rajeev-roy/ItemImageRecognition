@model ReflectionIT.Mvc.Paging.PagingList<FindProductByImage.Models.ProductDetails>
@using ReflectionIT.Mvc.Paging
@addTagHelper *,ReflectionIt.Mvc.Paging

@{
    ViewData["Title"] = "Index";
}
<nav aria-label="ProductDetails paging">
    @await this.Component.InvokeAsync("Pager", new { PagingList = this.Model })
</nav>
<h2>Product List</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Datetime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Datetime)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
<p>
    <a asp-action="Create">Add New Item</a>
</p>
<nav aria-label="Product Paging Example">
    <vc:pager paging-list="@Model" />
</nav>